Execute (Set wiki index):
  let g:pandoc#wiki#dirs = ['~']
Execute (Test Open wiki file):
  call pandoc#wiki#OpenWikiFile('index.md')
  AssertEqual 'index.md', expand('%:t')
  AssertEqual expand(g:pandoc#wiki#dirs[0]), getcwd()

Execute (Test Open Index):
  call pandoc#wiki#OpenIndex()
  AssertEqual 'index.md', expand('%:t')
  AssertEqual expand(g:pandoc#wiki#dirs[0]), getcwd()

Execute (Test Open Favorite Sub):
  let g:pandoc#wiki#favorite_sub = 'myfav.md'
  call pandoc#wiki#OpenFavoriteSub()
  AssertEqual 'myfav.md', expand('%:t')
  AssertEqual expand(g:pandoc#wiki#dirs[0]), getcwd()

Execute (Test Open Favorite Sub):
  let g:pandoc#wiki#favorite_sub = 'myfav.md'
  call pandoc#wiki#OpenFavoriteSub()
  AssertEqual 'myfav.md', expand('%:t')
  AssertEqual expand(g:pandoc#wiki#dirs[0]), getcwd()

Execute (Test Open Today):
  let today =  strftime("%Y-%m-%d") . ".md"
  call pandoc#wiki#OpenToday()
  AssertEqual today, expand('%:t')
  AssertEqual expand(g:pandoc#wiki#dirs[0]), getcwd()

Do (Write a row then block quote it):
  :set filetype=pandoc\<cr>
  iThis\<esc>gm

Expect (Block quoted section):
  > This

Do (Write a row then block quote it with blankspace):
  :set filetype=pandoc\<cr>
  i\<cr>This\<esc>gm

Expect (Block quoted section):

  > This
